{"version":3,"file":"OuterExamTimer.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_react2","_context","_timer","_ExamAPIError","_ExamStateProvider","_jsxRuntime","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ExamTimer","_ref","courseId","state","useContext","ExamStateContext","_useContext","AppContext","authenticatedUser","activeAttempt","showTimer","stopExam","submitExam","expireExam","pollAttempt","apiErrorMsg","pingAttempt","getLatestAttemptData","useEffect","jsxs","className","children","jsx","ExamTimerBlock","attempt","stopExamAttempt","expireExamAttempt","pollExamAttempt","propTypes","PropTypes","string","isRequired","OuterExamTimer","_ref2","_default","exports"],"sources":["../../src/core/OuterExamTimer.jsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from '@edx/frontend-platform/react';\nimport ExamStateContext from '../context';\nimport { ExamTimerBlock } from '../timer';\nimport ExamAPIError from '../exam/ExamAPIError';\nimport ExamStateProvider from './ExamStateProvider';\n\nconst ExamTimer = ({ courseId }) => {\n  const state = useContext(ExamStateContext);\n  const { authenticatedUser } = useContext(AppContext);\n  const {\n    activeAttempt, showTimer, stopExam, submitExam,\n    expireExam, pollAttempt, apiErrorMsg, pingAttempt,\n    getLatestAttemptData,\n  } = state;\n\n  useEffect(() => {\n    getLatestAttemptData(courseId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [courseId]);\n\n  // if user is not authenticated they cannot have active exam, so no need for timer\n  // (also exam API would return 403 error)\n  if (!authenticatedUser) {\n    return null;\n  }\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center\">\n      {showTimer && (\n        <ExamTimerBlock\n          attempt={activeAttempt}\n          stopExamAttempt={stopExam}\n          submitExam={submitExam}\n          expireExamAttempt={expireExam}\n          pollExamAttempt={pollAttempt}\n          pingAttempt={pingAttempt}\n        />\n      )}\n      {apiErrorMsg && <ExamAPIError />}\n    </div>\n  );\n};\n\nExamTimer.propTypes = {\n  courseId: PropTypes.string.isRequired,\n};\n\n/**\n * OuterExamTimer is the component responsible for showing exam timer on non-sequence pages.\n * @param courseId - Id of a course that is checked for active exams, if there is one the timer\n * will be shown.\n */\nconst OuterExamTimer = ({ courseId }) => (\n  <ExamStateProvider>\n    <ExamTimer courseId={courseId} />\n  </ExamStateProvider>\n);\n\nOuterExamTimer.propTypes = {\n  courseId: PropTypes.string.isRequired,\n};\n\nexport default OuterExamTimer;\n"],"mappings":"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","ignoreList":[]}