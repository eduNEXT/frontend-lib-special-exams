{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_reactRedux","_propTypes","_interopRequireDefault","_proctored_exam","_helpers","_constants","_EntranceInstructions","_SubmitInstructions","_RejectedInstructions","_ErrorInstructions","_SubmittedInstructions","_VerifiedInstructions","_ExpiredInstructions","_UnknownAttemptStatusError","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Instructions","_ref","children","exam","useSelector","state","specialExams","attempt","type","examType","prerequisite_status","prerequisitesData","passed_due_date","passedDueDate","hide_after_due","hideAfterDue","prerequisitesPassed","are_prerequisites_satisifed","attempt_status","attemptStatus","attempt_ready_to_resume","attemptReadyToResume","skipProctoring","toggleSkipProctoring","useState","toggleSkipProctoredExam","expired","shouldRenderExpiredPage","jsx","renderEmptyAttemptInstructions","component","skipProctoredExam","ExamType","PROCTORED","PrerequisitesProctoredExamInstructions","SkipProctoredExamInstruction","cancelSkipProctoredExam","isEmpty","attempt_id","ExamStatus","CREATED","DownloadSoftwareProctoredExamInstructions","DOWNLOAD_SOFTWARE_CLICKED","READY_TO_START","ReadyToStartProctoredExamInstructions","READY_TO_SUBMIT","SUBMITTED","TIMED","SECOND_REVIEW_REQUIRED","VERIFIED","REJECTED","ERROR","IS_ONBOARDING_ERROR","OnboardingErrorProctoredExamInstructions","STARTED","propTypes","PropTypes","element","isRequired","_default","exports"],"sources":["../../src/instructions/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  DownloadSoftwareProctoredExamInstructions,\n  ReadyToStartProctoredExamInstructions,\n  PrerequisitesProctoredExamInstructions,\n  SkipProctoredExamInstruction,\n  OnboardingErrorProctoredExamInstructions,\n} from './proctored_exam';\nimport { isEmpty, shouldRenderExpiredPage } from '../helpers';\nimport {\n  ExamStatus,\n  ExamType,\n  IS_ONBOARDING_ERROR,\n} from '../constants';\nimport EntranceExamInstructions from './EntranceInstructions';\nimport SubmitExamInstructions from './SubmitInstructions';\nimport RejectedInstructions from './RejectedInstructions';\nimport ErrorExamInstructions from './ErrorInstructions';\nimport SubmittedExamInstructions from './SubmittedInstructions';\nimport VerifiedExamInstructions from './VerifiedInstructions';\nimport ExpiredInstructions from './ExpiredInstructions';\nimport UnknownAttemptStatusError from './UnknownAttemptStatusError';\n\nconst Instructions = ({ children }) => {\n  const { exam } = useSelector(state => state.specialExams);\n  const {\n    attempt,\n    type: examType,\n    prerequisite_status: prerequisitesData,\n    passed_due_date: passedDueDate,\n    hide_after_due: hideAfterDue,\n  } = exam || {};\n  const prerequisitesPassed = prerequisitesData ? prerequisitesData.are_prerequisites_satisifed : true;\n  const {\n    attempt_status: attemptStatus,\n    attempt_ready_to_resume: attemptReadyToResume,\n  } = attempt || {};\n  const [skipProctoring, toggleSkipProctoring] = useState(false);\n  const toggleSkipProctoredExam = () => toggleSkipProctoring(!skipProctoring);\n  const expired = shouldRenderExpiredPage(exam);\n\n  if (expired) {\n    return <ExpiredInstructions />;\n  }\n\n  const renderEmptyAttemptInstructions = () => {\n    let component = <EntranceExamInstructions examType={examType} skipProctoredExam={toggleSkipProctoredExam} />;\n    if (examType === ExamType.PROCTORED && !prerequisitesPassed) {\n      component = <PrerequisitesProctoredExamInstructions skipProctoredExam={toggleSkipProctoredExam} />;\n    }\n    return component;\n  };\n\n  switch (true) {\n    case examType === ExamType.PROCTORED && skipProctoring:\n      return <SkipProctoredExamInstruction cancelSkipProctoredExam={toggleSkipProctoredExam} />;\n    case isEmpty(attempt) || !attempt.attempt_id:\n      return renderEmptyAttemptInstructions();\n    case attemptReadyToResume:\n      return <EntranceExamInstructions examType={examType} skipProctoredExam={toggleSkipProctoredExam} />;\n    case attemptStatus === ExamStatus.CREATED:\n      return <DownloadSoftwareProctoredExamInstructions skipProctoredExam={toggleSkipProctoredExam} />;\n    case attemptStatus === ExamStatus.DOWNLOAD_SOFTWARE_CLICKED:\n      return <DownloadSoftwareProctoredExamInstructions />;\n    case attemptStatus === ExamStatus.READY_TO_START:\n      return <ReadyToStartProctoredExamInstructions />;\n    case attemptStatus === ExamStatus.READY_TO_SUBMIT:\n      return <SubmitExamInstructions />;\n    case attemptStatus === ExamStatus.SUBMITTED:\n      // don't show submitted page for timed exam if exam has passed due date\n      // and in studio visibility option is set to 'show entire section'\n      // instead show exam content\n      if (examType === ExamType.TIMED && passedDueDate && !hideAfterDue) {\n        return children;\n      }\n      return <SubmittedExamInstructions examType={examType} />;\n    case attemptStatus === ExamStatus.SECOND_REVIEW_REQUIRED:\n      return <SubmittedExamInstructions examType={examType} />;\n    case attemptStatus === ExamStatus.VERIFIED:\n      return <VerifiedExamInstructions examType={examType} />;\n    case attemptStatus === ExamStatus.REJECTED:\n      return <RejectedInstructions examType={examType} />;\n    case attemptStatus === ExamStatus.ERROR:\n      return <ErrorExamInstructions examType={examType} />;\n    case examType === ExamType.PROCTORED && IS_ONBOARDING_ERROR(attemptStatus):\n      return <OnboardingErrorProctoredExamInstructions />;\n    case attemptStatus === ExamStatus.STARTED:\n      return children;\n    default:\n      return <UnknownAttemptStatusError />;\n  }\n};\n\nInstructions.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Instructions;\n"],"mappings":"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"}