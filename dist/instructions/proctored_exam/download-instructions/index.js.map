{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_reactRedux","_propTypes","_interopRequireDefault","_frontendPlatform","_i18n","_paragon","_constants","_data","_WarningModal","_api","_messages","_LtiProviderInstructions","_RestProviderInstructions","_RPNowInstructions","_DownloadButtons","_Footer","_SkipProctoredExamButton","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DownloadSoftwareProctoredExamInstructions","_ref","intl","skipProctoredExam","proctoringSettings","exam","allowProctoringOptOut","useSelector","state","specialExams","dispatch","useDispatch","attempt","course_id","courseId","content_id","sequenceId","exam_started_poll_url","pollUrl","attempt_code","examCode","attempt_id","attemptId","software_download_url","downloadUrl","use_legacy_attempt_api","useLegacyAttemptApi","provider_name","providerName","provider_tech_support_email","supportEmail","provider_tech_support_phone","supportPhone","provider_tech_support_url","supportURL","exam_proctoring_backend","proctoringBackend","examHasLtiProvider","instructions","systemCheckStatus","setSystemCheckStatus","useState","downloadClicked","setDownloadClicked","withProviderInstructions","length","launchSoftwareUrl","getConfig","EXAMS_BASE_URL","handleDownloadClick","pollExamAttempt","then","data","status","ExamStatus","READY_TO_START","softwareDownloadAttempt","window","location","assign","handleStartExamClick","getExamAttemptsData","providerInstructions","jsx","code","jsxs","children","Container","className","isOpen","Boolean","title","formatMessage","messages","softwareLoadedModalTitle","cannotStartModalTitle","body","softwareLoadedModalBody","cannotStartModalBody","handleClose","FormattedMessage","id","defaultMessage","onDownloadClick","onStartExamClick","handleClick","propTypes","intlShape","isRequired","PropTypes","func","_default","exports","injectIntl"],"sources":["../../../../src/instructions/proctored_exam/download-instructions/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Container } from '@openedx/paragon';\nimport { ExamStatus } from '../../../constants';\nimport { getExamAttemptsData } from '../../../data';\nimport WarningModal from '../WarningModal';\nimport { pollExamAttempt, softwareDownloadAttempt } from '../../../data/api';\nimport messages from '../messages';\nimport LtiProviderExamInstructions from './LtiProviderInstructions';\nimport RestProviderInstructions from './RestProviderInstructions';\nimport RPNowInstructions from './RPNowInstructions';\nimport DownloadButtons from './DownloadButtons';\nimport Footer from '../Footer';\nimport SkipProctoredExamButton from '../SkipProctoredExamButton';\n\nconst DownloadSoftwareProctoredExamInstructions = ({ intl, skipProctoredExam }) => {\n  const {\n    proctoringSettings,\n    exam,\n    allowProctoringOptOut,\n  } = useSelector(state => state.specialExams);\n\n  const dispatch = useDispatch();\n\n  const {\n    attempt,\n    course_id: courseId,\n    content_id: sequenceId,\n  } = exam;\n\n  const {\n    exam_started_poll_url: pollUrl,\n    attempt_code: examCode,\n    attempt_id: attemptId,\n    software_download_url: downloadUrl,\n    use_legacy_attempt_api: useLegacyAttemptApi,\n  } = attempt;\n\n  const {\n    provider_name: providerName,\n    provider_tech_support_email: supportEmail,\n    provider_tech_support_phone: supportPhone,\n    provider_tech_support_url: supportURL,\n    exam_proctoring_backend: proctoringBackend,\n  } = proctoringSettings;\n\n  const examHasLtiProvider = !useLegacyAttemptApi;\n  const { instructions } = proctoringBackend || {};\n  const [systemCheckStatus, setSystemCheckStatus] = useState('');\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const withProviderInstructions = instructions && instructions.length > 0;\n  const launchSoftwareUrl = examHasLtiProvider\n    ? `${getConfig().EXAMS_BASE_URL}/lti/start_proctoring/${attemptId}` : downloadUrl;\n\n  const handleDownloadClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => {\n        if (data.status === ExamStatus.READY_TO_START) {\n          setSystemCheckStatus('success');\n        } else {\n          // TODO: This call circumvents the thunk for startProctoringSoftwareDownload\n          // which is a bit odd and would handle useLegacyAttempt for us.\n          // There's an opportunity to refactor and clean this up a bit.\n          softwareDownloadAttempt(attemptId, useLegacyAttemptApi);\n          window.location.assign(launchSoftwareUrl);\n        }\n      });\n    setDownloadClicked(true);\n  };\n\n  const handleStartExamClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => (\n        data.status === ExamStatus.READY_TO_START\n          ? dispatch(getExamAttemptsData(courseId, sequenceId))\n          : setSystemCheckStatus('failure')\n      ));\n  };\n\n  function providerInstructions() {\n    if (examHasLtiProvider) {\n      return (\n        <LtiProviderExamInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n          supportURL={supportURL}\n        />\n      );\n    }\n    if (withProviderInstructions) {\n      return (\n        <RestProviderInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n          instructions={instructions}\n        />\n      );\n    }\n    return (\n      <RPNowInstructions code={examCode} />\n    );\n  }\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4\">\n        <WarningModal\n          isOpen={Boolean(systemCheckStatus)}\n          title={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalTitle)\n              : intl.formatMessage(messages.cannotStartModalTitle)\n          }\n          body={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalBody)\n              : intl.formatMessage(messages.cannotStartModalBody)\n          }\n          handleClose={() => setSystemCheckStatus('')}\n        />\n        <div className=\"h3\" data-testid=\"exam-instructions-title\">\n          <FormattedMessage\n            id=\"exam.DownloadSoftwareProctoredExamInstructions.title\"\n            defaultMessage=\"Set up and start your proctored exam.\"\n          />\n        </div>\n        { providerInstructions() }\n        <DownloadButtons\n          downloadUrl={launchSoftwareUrl}\n          onDownloadClick={handleDownloadClick}\n          onStartExamClick={handleStartExamClick}\n          downloadClicked={downloadClicked}\n        />\n        {!examHasLtiProvider && !withProviderInstructions && (\n          <div className=\"pt-3\">\n            <div className=\"h4\">\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.title\"\n                defaultMessage=\"Step 3.\"\n              />\n            </div>\n            <p>\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.body\"\n                defaultMessage={'For security and exam integrity reasons, '\n                + 'we ask you to sign in to your edX account. Then we will '\n                + 'direct you to the RPNow proctoring experience.'}\n              />\n            </p>\n          </div>\n        )}\n      </Container>\n      {allowProctoringOptOut && <SkipProctoredExamButton handleClick={skipProctoredExam} />}\n      <Footer />\n    </div>\n  );\n};\n\nDownloadSoftwareProctoredExamInstructions.propTypes = {\n  intl: intlShape.isRequired,\n  skipProctoredExam: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(DownloadSoftwareProctoredExamInstructions);\n"],"mappings":"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"}