{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_frontendPlatform","_i18n","_paragon","_context","_constants","_WarningModal","_api","_messages","_LtiProviderInstructions","_RestProviderInstructions","_RPNowInstructions","_DownloadButtons","_Footer","_SkipProctoredExamButton","_jsxRuntime","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","Array","from","test","len","length","arr2","l","Symbol","iterator","f","next","done","push","value","isArray","DownloadSoftwareProctoredExamInstructions","_ref","intl","skipProctoredExam","state","useContext","ExamStateContext","proctoringSettings","exam","getExamAttemptsData","allowProctoringOptOut","attempt","courseId","course_id","sequenceId","content_id","pollUrl","exam_started_poll_url","examCode","attempt_code","attemptId","attempt_id","downloadUrl","software_download_url","useLegacyAttemptApi","use_legacy_attempt_api","providerName","provider_name","supportEmail","provider_tech_support_email","supportPhone","provider_tech_support_phone","proctoringBackend","exam_proctoring_backend","examHasLtiProvider","_ref2","instructions","_useState","useState","_useState2","systemCheckStatus","setSystemCheckStatus","_useState3","_useState4","downloadClicked","setDownloadClicked","withProviderInstructions","launchSoftwareUrl","concat","getConfig","EXAMS_BASE_URL","handleDownloadClick","pollExamAttempt","then","data","status","ExamStatus","READY_TO_START","softwareDownloadAttempt","window","location","assign","handleStartExamClick","providerInstructions","jsx","code","jsxs","children","Container","className","isOpen","Boolean","title","formatMessage","messages","softwareLoadedModalTitle","cannotStartModalTitle","body","softwareLoadedModalBody","cannotStartModalBody","handleClose","FormattedMessage","id","defaultMessage","onDownloadClick","onStartExamClick","handleClick","propTypes","intlShape","isRequired","PropTypes","func","_default","exports","injectIntl"],"sources":["../../../../src/instructions/proctored_exam/download-instructions/index.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Container } from '@edx/paragon';\nimport ExamStateContext from '../../../context';\nimport { ExamStatus } from '../../../constants';\nimport WarningModal from '../WarningModal';\nimport { pollExamAttempt, softwareDownloadAttempt } from '../../../data/api';\nimport messages from '../messages';\nimport LtiProviderExamInstructions from './LtiProviderInstructions';\nimport RestProviderInstructions from './RestProviderInstructions';\nimport RPNowInstructions from './RPNowInstructions';\nimport DownloadButtons from './DownloadButtons';\nimport Footer from '../Footer';\nimport SkipProctoredExamButton from '../SkipProctoredExamButton';\n\nconst DownloadSoftwareProctoredExamInstructions = ({ intl, skipProctoredExam }) => {\n  const state = useContext(ExamStateContext);\n  const {\n    proctoringSettings,\n    exam,\n    getExamAttemptsData,\n    allowProctoringOptOut,\n  } = state;\n  const {\n    attempt,\n    course_id: courseId,\n    content_id: sequenceId,\n  } = exam;\n  const {\n    exam_started_poll_url: pollUrl,\n    attempt_code: examCode,\n    attempt_id: attemptId,\n    software_download_url: downloadUrl,\n    use_legacy_attempt_api: useLegacyAttemptApi,\n  } = attempt;\n  const {\n    provider_name: providerName,\n    provider_tech_support_email: supportEmail,\n    provider_tech_support_phone: supportPhone,\n    exam_proctoring_backend: proctoringBackend,\n  } = proctoringSettings;\n  const examHasLtiProvider = !useLegacyAttemptApi;\n  const { instructions } = proctoringBackend || {};\n  const [systemCheckStatus, setSystemCheckStatus] = useState('');\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const withProviderInstructions = instructions && instructions.length > 0;\n  const launchSoftwareUrl = examHasLtiProvider\n    ? `${getConfig().EXAMS_BASE_URL}/lti/start_proctoring/${attemptId}` : downloadUrl;\n\n  const handleDownloadClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => {\n        if (data.status === ExamStatus.READY_TO_START) {\n          setSystemCheckStatus('success');\n        } else {\n          // TODO: This call circumvents the thunk for startProctoringSoftwareDownload\n          // which is a bit odd and would handle useLegacyAttempt for us.\n          // There's an opportunity to refactor and clean this up a bit.\n          softwareDownloadAttempt(attemptId, useLegacyAttemptApi);\n          window.location.assign(launchSoftwareUrl);\n        }\n      });\n    setDownloadClicked(true);\n  };\n\n  const handleStartExamClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => (\n        data.status === ExamStatus.READY_TO_START\n          ? getExamAttemptsData(courseId, sequenceId)\n          : setSystemCheckStatus('failure')\n      ));\n  };\n\n  function providerInstructions() {\n    if (examHasLtiProvider) {\n      return (\n        <LtiProviderExamInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n        />\n      );\n    }\n    if (withProviderInstructions) {\n      return (\n        <RestProviderInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n          instructions={instructions}\n        />\n      );\n    }\n    return (\n      <RPNowInstructions code={examCode} />\n    );\n  }\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4\">\n        <WarningModal\n          isOpen={Boolean(systemCheckStatus)}\n          title={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalTitle)\n              : intl.formatMessage(messages.cannotStartModalTitle)\n          }\n          body={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalBody)\n              : intl.formatMessage(messages.cannotStartModalBody)\n          }\n          handleClose={() => setSystemCheckStatus('')}\n        />\n        <div className=\"h3\" data-testid=\"exam-instructions-title\">\n          <FormattedMessage\n            id=\"exam.DownloadSoftwareProctoredExamInstructions.title\"\n            defaultMessage=\"Set up and start your proctored exam.\"\n          />\n        </div>\n        { providerInstructions() }\n        <DownloadButtons\n          downloadUrl={launchSoftwareUrl}\n          onDownloadClick={handleDownloadClick}\n          onStartExamClick={handleStartExamClick}\n          downloadClicked={downloadClicked}\n        />\n        {!examHasLtiProvider && !withProviderInstructions && (\n          <div className=\"pt-3\">\n            <div className=\"h4\">\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.title\"\n                defaultMessage=\"Step 3.\"\n              />\n            </div>\n            <p>\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.body\"\n                defaultMessage={'For security and exam integrity reasons, '\n                + 'we ask you to sign in to your edX account. Then we will '\n                + 'direct you to the RPNow proctoring experience.'}\n              />\n            </p>\n          </div>\n        )}\n      </Container>\n      {allowProctoringOptOut && <SkipProctoredExamButton handleClick={skipProctoredExam} />}\n      <Footer />\n    </div>\n  );\n};\n\nDownloadSoftwareProctoredExamInstructions.propTypes = {\n  intl: intlShape.isRequired,\n  skipProctoredExam: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(DownloadSoftwareProctoredExamInstructions);\n"],"mappings":"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","ignoreList":[]}