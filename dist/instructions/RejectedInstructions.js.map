{"version":3,"file":"RejectedInstructions.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_i18n","_constants","_onboarding_exam","_proctored_exam","_Footer","_jsxRuntime","obj","__esModule","default","RejectedExamInstructions","_ref","examType","renderInstructions","ExamType","PROCTORED","jsx","RejectedProctoredExamInstructions","ONBOARDING","RejectedOnboardingExamInstructions","jsxs","children","Container","className","FormattedMessage","id","defaultMessage","propTypes","PropTypes","string","isRequired","_default","exports"],"sources":["../../src/instructions/RejectedInstructions.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from '@openedx/paragon';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { ExamType } from '../constants';\nimport { RejectedOnboardingExamInstructions } from './onboarding_exam';\nimport { RejectedProctoredExamInstructions } from './proctored_exam';\nimport Footer from './proctored_exam/Footer';\n\nconst RejectedExamInstructions = ({ examType }) => {\n  const renderInstructions = () => {\n    switch (examType) {\n      case ExamType.PROCTORED:\n        return <RejectedProctoredExamInstructions />;\n      case ExamType.ONBOARDING:\n        return <RejectedOnboardingExamInstructions />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4 bg-danger-100\">\n        {renderInstructions()}\n      </Container>\n      {examType === ExamType.PROCTORED && (\n        <div className=\"footer-sequence\">\n          <p className=\"ml-3 mb-3 text-gray-500\">\n            <FormattedMessage\n              id=\"exam.RejectedProctoredExamInstructions.note\"\n              defaultMessage=\"If you have concerns about your proctoring session results, contact your course team.\"\n            />\n          </p>\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nRejectedExamInstructions.propTypes = {\n  examType: PropTypes.string.isRequired,\n};\n\nexport default RejectedExamInstructions;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AACA,IAAAM,eAAA,GAAAN,OAAA;AACA,IAAAO,OAAA,GAAAR,sBAAA,CAAAC,OAAA;AAA6C,IAAAQ,WAAA,GAAAR,OAAA;AAAA,SAAAD,uBAAAU,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE7C,MAAMG,wBAAwB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC5C,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,QAAQD,QAAQ;MACd,KAAKE,mBAAQ,CAACC,SAAS;QACrB,oBAAO,IAAAT,WAAA,CAAAU,GAAA,EAACZ,eAAA,CAAAa,iCAAiC,IAAE,CAAC;MAC9C,KAAKH,mBAAQ,CAACI,UAAU;QACtB,oBAAO,IAAAZ,WAAA,CAAAU,GAAA,EAACb,gBAAA,CAAAgB,kCAAkC,IAAE,CAAC;MAC/C;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACE,IAAAb,WAAA,CAAAc,IAAA;IAAAC,QAAA,gBACE,IAAAf,WAAA,CAAAU,GAAA,EAAChB,QAAA,CAAAsB,SAAS;MAACC,SAAS,EAAC,gCAAgC;MAAAF,QAAA,EAClDR,kBAAkB,CAAC;IAAC,CACZ,CAAC,EACXD,QAAQ,KAAKE,mBAAQ,CAACC,SAAS,iBAC9B,IAAAT,WAAA,CAAAU,GAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAF,QAAA,eAC9B,IAAAf,WAAA,CAAAU,GAAA;QAAGO,SAAS,EAAC,yBAAyB;QAAAF,QAAA,eACpC,IAAAf,WAAA,CAAAU,GAAA,EAACf,KAAA,CAAAuB,gBAAgB;UACfC,EAAE,EAAC,6CAA6C;UAChDC,cAAc,EAAC;QAAuF,CACvG;MAAC,CACD;IAAC,CACD,CACN,eACD,IAAApB,WAAA,CAAAU,GAAA,EAACX,OAAA,CAAAI,OAAM,IAAE,CAAC;EAAA,CACP,CAAC;AAEV,CAAC;AAEDC,wBAAwB,CAACiB,SAAS,GAAG;EACnCf,QAAQ,EAAEgB,kBAAS,CAACC,MAAM,CAACC;AAC7B,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAvB,OAAA,GAEaC,wBAAwB"}