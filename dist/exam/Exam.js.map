{"version":3,"file":"Exam.js","names":["_react","_interopRequireWildcard","require","_reactRedux","_propTypes","_interopRequireDefault","_i18n","_paragon","_icons","_timer","_instructions","_ExamAPIError","_constants","_messages","_data","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Exam","_ref","isGated","isTimeLimited","originalUserIsStaff","canAccessProctoredExams","children","intl","isLoading","activeAttempt","exam","apiErrorMsg","useSelector","state","specialExams","dispatch","useDispatch","showTimer","IS_STARTED_STATUS","attempt_status","attempt","type","examType","id","examId","passed_due_date","passedDueDate","hide_after_due","hideAfterDue","attemptStatus","shouldShowMasqueradeAlert","ExamType","TIMED","ExamStatus","STARTED","hasProctoredExamAccess","setHasProctoredExamAccess","useState","proctoredExamTypes","ONBOARDING","PRACTICE","PROCTORED","useEffect","includes","getProctoringSettings","jsx","className","Spinner","animation","variant","formatMessage","messages","proctoredExamAccessDenied","sequenceContent","Fragment","jsxs","Alert","icon","Info","FormattedMessage","defaultMessage","ExamTimerBlock","propTypes","PropTypes","bool","isRequired","element","intlShape","defaultProps","_default","exports","injectIntl"],"sources":["../../src/exam/Exam.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape, FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Alert, Spinner } from '@openedx/paragon';\nimport { Info } from '@openedx/paragon/icons';\nimport { ExamTimerBlock } from '../timer';\nimport Instructions from '../instructions';\nimport ExamAPIError from './ExamAPIError';\nimport { ExamStatus, ExamType, IS_STARTED_STATUS } from '../constants';\nimport messages from './messages';\nimport { getProctoringSettings } from '../data';\n\n/**\n * Exam component is intended to render exam instructions before and after exam.\n * It is also responsible for rendering exam timer block/component during the exam.\n * If children do not relate to exam sequence, render them directly.\n * @param isTimeLimited - boolean used to identify if we need to process sequence as an exam\n * @param children - sequence content\n * @returns {JSX.Element}\n * @constructor\n */\nconst Exam = ({\n  isGated, isTimeLimited, originalUserIsStaff, canAccessProctoredExams, children, intl,\n}) => {\n  const {\n    isLoading, activeAttempt, exam, apiErrorMsg,\n  } = useSelector(state => state.specialExams);\n  const dispatch = useDispatch();\n\n  const showTimer = !!(activeAttempt && IS_STARTED_STATUS(activeAttempt.attempt_status));\n\n  const {\n    attempt,\n    type: examType,\n    id: examId,\n    passed_due_date: passedDueDate,\n    hide_after_due: hideAfterDue,\n  } = exam || {};\n  const { attempt_status: attemptStatus } = attempt || {};\n\n  const shouldShowMasqueradeAlert = () => {\n    // if course staff is masquerading as a specific learner, they should be able\n    // to view the exam content regardless of the learner's current state\n    if (originalUserIsStaff && isTimeLimited) {\n      if (examType === ExamType.TIMED && passedDueDate && !hideAfterDue) {\n        // if the learner is able to view exam content after the due date is passed,\n        // don't show this alert\n        return false;\n      }\n      return attemptStatus !== ExamStatus.STARTED;\n    }\n    return false;\n  };\n\n  const [hasProctoredExamAccess, setHasProctoredExamAccess] = useState(true);\n\n  const proctoredExamTypes = [ExamType.ONBOARDING, ExamType.PRACTICE, ExamType.PROCTORED];\n\n  useEffect(() => {\n    if (proctoredExamTypes.includes(examType)) {\n      // only fetch proctoring settings for a proctored exam\n      if (examId) {\n        dispatch(getProctoringSettings());\n      }\n\n      // Only exclude Timed Exam when restricting access to exams\n      setHasProctoredExamAccess(canAccessProctoredExams);\n    }\n    // this makes sure useEffect gets called only one time after the exam has been fetched\n    // we can't leave this empty since initially exam is just an empty object, so\n    // API calls above would not get triggered\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [examId, dispatch]);\n\n  if (isLoading) {\n    return (\n      <div data-testid=\"spinner\" className=\"d-flex justify-content-center align-items-center flex-column my-5 py-5\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n      </div>\n    );\n  }\n\n  if (!hasProctoredExamAccess) {\n    // If the user cannot acces proctoring exam, and the current exam is a proctoring exam,\n    // we want to display a message box to let learner know they have no access.\n    return (\n      <div data-testid=\"no-access\" className=\"d-flex justify-content-center align-items-center flex-column\">\n        {intl.formatMessage(messages.proctoredExamAccessDenied)}\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  const sequenceContent = <>{children}</>;\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center\">\n      {shouldShowMasqueradeAlert() && (\n        <Alert variant=\"info\" icon={Info} data-testid=\"masquerade-alert\">\n          <FormattedMessage\n            id=\"exam.hiddenContent\"\n            defaultMessage=\"This exam is hidden from the learner.\"\n          />\n        </Alert>\n      )}\n      {showTimer && (\n        <ExamTimerBlock />\n      )}\n      { // show the error message only if you are in the exam sequence\n        isTimeLimited && apiErrorMsg && <ExamAPIError />\n      }\n      {isTimeLimited && !originalUserIsStaff && !isGated\n        ? <Instructions>{sequenceContent}</Instructions>\n        : sequenceContent}\n    </div>\n  );\n};\n\nExam.propTypes = {\n  isTimeLimited: PropTypes.bool.isRequired,\n  isGated: PropTypes.bool.isRequired,\n  originalUserIsStaff: PropTypes.bool.isRequired,\n  canAccessProctoredExams: PropTypes.bool,\n  children: PropTypes.element.isRequired,\n  intl: intlShape.isRequired,\n};\n\nExam.defaultProps = {\n  canAccessProctoredExams: true,\n};\n\nexport default injectIntl(Exam);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AACA,IAAAK,QAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AACA,IAAAO,MAAA,GAAAP,OAAA;AACA,IAAAQ,aAAA,GAAAL,sBAAA,CAAAH,OAAA;AACA,IAAAS,aAAA,GAAAN,sBAAA,CAAAH,OAAA;AACA,IAAAU,UAAA,GAAAV,OAAA;AACA,IAAAW,SAAA,GAAAR,sBAAA,CAAAH,OAAA;AACA,IAAAY,KAAA,GAAAZ,OAAA;AAAgD,IAAAa,WAAA,GAAAb,OAAA;AAAA,SAAAG,uBAAAW,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAnB,wBAAAe,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAQ,KAAA,GAAAL,wBAAA,CAAAC,WAAA,OAAAI,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAT,GAAA,YAAAQ,KAAA,CAAAE,GAAA,CAAAV,GAAA,SAAAW,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAhB,GAAA,QAAAgB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnB,GAAA,EAAAgB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAf,GAAA,EAAAgB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAhB,GAAA,CAAAgB,GAAA,SAAAL,MAAA,CAAAT,OAAA,GAAAF,GAAA,MAAAQ,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAArB,GAAA,EAAAW,MAAA,YAAAA,MAAA;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAMW,IAAI,GAAGC,IAAA,IAEP;EAAA,IAFQ;IACZC,OAAO;IAAEC,aAAa;IAAEC,mBAAmB;IAAEC,uBAAuB;IAAEC,QAAQ;IAAEC;EAClF,CAAC,GAAAN,IAAA;EACC,MAAM;IACJO,SAAS;IAAEC,aAAa;IAAEC,IAAI;IAAEC;EAClC,CAAC,GAAG,IAAAC,uBAAW,EAACC,KAAK,IAAIA,KAAK,CAACC,YAAY,CAAC;EAC5C,MAAMC,QAAQ,GAAG,IAAAC,uBAAW,EAAC,CAAC;EAE9B,MAAMC,SAAS,GAAG,CAAC,EAAER,aAAa,IAAI,IAAAS,4BAAiB,EAACT,aAAa,CAACU,cAAc,CAAC,CAAC;EAEtF,MAAM;IACJC,OAAO;IACPC,IAAI,EAAEC,QAAQ;IACdC,EAAE,EAAEC,MAAM;IACVC,eAAe,EAAEC,aAAa;IAC9BC,cAAc,EAAEC;EAClB,CAAC,GAAGlB,IAAI,IAAI,CAAC,CAAC;EACd,MAAM;IAAES,cAAc,EAAEU;EAAc,CAAC,GAAGT,OAAO,IAAI,CAAC,CAAC;EAEvD,MAAMU,yBAAyB,GAAGA,CAAA,KAAM;IACtC;IACA;IACA,IAAI1B,mBAAmB,IAAID,aAAa,EAAE;MACxC,IAAImB,QAAQ,KAAKS,mBAAQ,CAACC,KAAK,IAAIN,aAAa,IAAI,CAACE,YAAY,EAAE;QACjE;QACA;QACA,OAAO,KAAK;MACd;MACA,OAAOC,aAAa,KAAKI,qBAAU,CAACC,OAAO;IAC7C;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG,IAAAC,eAAQ,EAAC,IAAI,CAAC;EAE1E,MAAMC,kBAAkB,GAAG,CAACP,mBAAQ,CAACQ,UAAU,EAAER,mBAAQ,CAACS,QAAQ,EAAET,mBAAQ,CAACU,SAAS,CAAC;EAEvF,IAAAC,gBAAS,EAAC,MAAM;IACd,IAAIJ,kBAAkB,CAACK,QAAQ,CAACrB,QAAQ,CAAC,EAAE;MACzC;MACA,IAAIE,MAAM,EAAE;QACVT,QAAQ,CAAC,IAAA6B,2BAAqB,EAAC,CAAC,CAAC;MACnC;;MAEA;MACAR,yBAAyB,CAAC/B,uBAAuB,CAAC;IACpD;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACmB,MAAM,EAAET,QAAQ,CAAC,CAAC;EAEtB,IAAIP,SAAS,EAAE;IACb,oBACE,IAAA/B,WAAA,CAAAoE,GAAA;MAAK,eAAY,SAAS;MAACC,SAAS,EAAC,wEAAwE;MAAAxC,QAAA,eAC3G,IAAA7B,WAAA,CAAAoE,GAAA,EAAC5E,QAAA,CAAA8E,OAAO;QAACC,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAC;MAAS,CAAE;IAAC,CAC7C,CAAC;EAEV;EAEA,IAAI,CAACd,sBAAsB,EAAE;IAC3B;IACA;IACA,oBACE,IAAA1D,WAAA,CAAAoE,GAAA;MAAK,eAAY,WAAW;MAACC,SAAS,EAAC,8DAA8D;MAAAxC,QAAA,EAClGC,IAAI,CAAC2C,aAAa,CAACC,iBAAQ,CAACC,yBAAyB;IAAC,CACpD,CAAC;EAEV;;EAEA;EACA,MAAMC,eAAe,gBAAG,IAAA5E,WAAA,CAAAoE,GAAA,EAAApE,WAAA,CAAA6E,QAAA;IAAAhD,QAAA,EAAGA;EAAQ,CAAG,CAAC;EAEvC,oBACE,IAAA7B,WAAA,CAAA8E,IAAA;IAAKT,SAAS,EAAC,2CAA2C;IAAAxC,QAAA,GACvDwB,yBAAyB,CAAC,CAAC,iBAC1B,IAAArD,WAAA,CAAAoE,GAAA,EAAC5E,QAAA,CAAAuF,KAAK;MAACP,OAAO,EAAC,MAAM;MAACQ,IAAI,EAAEC,WAAK;MAAC,eAAY,kBAAkB;MAAApD,QAAA,eAC9D,IAAA7B,WAAA,CAAAoE,GAAA,EAAC7E,KAAA,CAAA2F,gBAAgB;QACfpC,EAAE,EAAC,oBAAoB;QACvBqC,cAAc,EAAC;MAAuC,CACvD;IAAC,CACG,CACR,EACA3C,SAAS,iBACR,IAAAxC,WAAA,CAAAoE,GAAA,EAAC1E,MAAA,CAAA0F,cAAc,IAAE,CAClB;IACC;IACA1D,aAAa,IAAIQ,WAAW,iBAAI,IAAAlC,WAAA,CAAAoE,GAAA,EAACxE,aAAA,CAAAO,OAAY,IAAE,CAAC,EAEjDuB,aAAa,IAAI,CAACC,mBAAmB,IAAI,CAACF,OAAO,gBAC9C,IAAAzB,WAAA,CAAAoE,GAAA,EAACzE,aAAA,CAAAQ,OAAY;MAAA0B,QAAA,EAAE+C;IAAe,CAAe,CAAC,GAC9CA,eAAe;EAAA,CAChB,CAAC;AAEV,CAAC;AAEDrD,IAAI,CAAC8D,SAAS,GAAG;EACf3D,aAAa,EAAE4D,kBAAS,CAACC,IAAI,CAACC,UAAU;EACxC/D,OAAO,EAAE6D,kBAAS,CAACC,IAAI,CAACC,UAAU;EAClC7D,mBAAmB,EAAE2D,kBAAS,CAACC,IAAI,CAACC,UAAU;EAC9C5D,uBAAuB,EAAE0D,kBAAS,CAACC,IAAI;EACvC1D,QAAQ,EAAEyD,kBAAS,CAACG,OAAO,CAACD,UAAU;EACtC1D,IAAI,EAAE4D,eAAS,CAACF;AAClB,CAAC;AAEDjE,IAAI,CAACoE,YAAY,GAAG;EAClB/D,uBAAuB,EAAE;AAC3B,CAAC;AAAC,IAAAgE,QAAA,GAAAC,OAAA,CAAA1F,OAAA,GAEa,IAAA2F,gBAAU,EAACvE,IAAI,CAAC"}